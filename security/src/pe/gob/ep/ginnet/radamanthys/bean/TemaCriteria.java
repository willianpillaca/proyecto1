package pe.gob.ep.ginnet.radamanthys.bean;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TemaCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    public TemaCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    protected TemaCriteria(TemaCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tbl_tema
     *
     * @ibatorgenerated
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdTemaIsNull() {
            addCriterion("id_tema is null");
            return this;
        }

        public Criteria andIdTemaIsNotNull() {
            addCriterion("id_tema is not null");
            return this;
        }

        public Criteria andIdTemaEqualTo(Integer value) {
            addCriterion("id_tema =", value, "idTema");
            return this;
        }

        public Criteria andIdTemaNotEqualTo(Integer value) {
            addCriterion("id_tema <>", value, "idTema");
            return this;
        }

        public Criteria andIdTemaGreaterThan(Integer value) {
            addCriterion("id_tema >", value, "idTema");
            return this;
        }

        public Criteria andIdTemaGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_tema >=", value, "idTema");
            return this;
        }

        public Criteria andIdTemaLessThan(Integer value) {
            addCriterion("id_tema <", value, "idTema");
            return this;
        }

        public Criteria andIdTemaLessThanOrEqualTo(Integer value) {
            addCriterion("id_tema <=", value, "idTema");
            return this;
        }

        public Criteria andIdTemaIn(List<Integer> values) {
            addCriterion("id_tema in", values, "idTema");
            return this;
        }

        public Criteria andIdTemaNotIn(List<Integer> values) {
            addCriterion("id_tema not in", values, "idTema");
            return this;
        }

        public Criteria andIdTemaBetween(Integer value1, Integer value2) {
            addCriterion("id_tema between", value1, value2, "idTema");
            return this;
        }

        public Criteria andIdTemaNotBetween(Integer value1, Integer value2) {
            addCriterion("id_tema not between", value1, value2, "idTema");
            return this;
        }

        public Criteria andIdCursoIsNull() {
            addCriterion("id_curso is null");
            return this;
        }

        public Criteria andIdCursoIsNotNull() {
            addCriterion("id_curso is not null");
            return this;
        }

        public Criteria andIdCursoEqualTo(Integer value) {
            addCriterion("id_curso =", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoNotEqualTo(Integer value) {
            addCriterion("id_curso <>", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoGreaterThan(Integer value) {
            addCriterion("id_curso >", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_curso >=", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoLessThan(Integer value) {
            addCriterion("id_curso <", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoLessThanOrEqualTo(Integer value) {
            addCriterion("id_curso <=", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoIn(List<Integer> values) {
            addCriterion("id_curso in", values, "idCurso");
            return this;
        }

        public Criteria andIdCursoNotIn(List<Integer> values) {
            addCriterion("id_curso not in", values, "idCurso");
            return this;
        }

        public Criteria andIdCursoBetween(Integer value1, Integer value2) {
            addCriterion("id_curso between", value1, value2, "idCurso");
            return this;
        }

        public Criteria andIdCursoNotBetween(Integer value1, Integer value2) {
            addCriterion("id_curso not between", value1, value2, "idCurso");
            return this;
        }

        public Criteria andTemaIsNull() {
            addCriterion("tema is null");
            return this;
        }

        public Criteria andTemaIsNotNull() {
            addCriterion("tema is not null");
            return this;
        }

        public Criteria andTemaEqualTo(String value) {
            addCriterion("tema =", value, "tema");
            return this;
        }

        public Criteria andTemaNotEqualTo(String value) {
            addCriterion("tema <>", value, "tema");
            return this;
        }

        public Criteria andTemaGreaterThan(String value) {
            addCriterion("tema >", value, "tema");
            return this;
        }

        public Criteria andTemaGreaterThanOrEqualTo(String value) {
            addCriterion("tema >=", value, "tema");
            return this;
        }

        public Criteria andTemaLessThan(String value) {
            addCriterion("tema <", value, "tema");
            return this;
        }

        public Criteria andTemaLessThanOrEqualTo(String value) {
            addCriterion("tema <=", value, "tema");
            return this;
        }

        public Criteria andTemaLike(String value) {
            addCriterion("tema like", value, "tema");
            return this;
        }

        public Criteria andTemaNotLike(String value) {
            addCriterion("tema not like", value, "tema");
            return this;
        }

        public Criteria andTemaIn(List<String> values) {
            addCriterion("tema in", values, "tema");
            return this;
        }

        public Criteria andTemaNotIn(List<String> values) {
            addCriterion("tema not in", values, "tema");
            return this;
        }

        public Criteria andTemaBetween(String value1, String value2) {
            addCriterion("tema between", value1, value2, "tema");
            return this;
        }

        public Criteria andTemaNotBetween(String value1, String value2) {
            addCriterion("tema not between", value1, value2, "tema");
            return this;
        }

        public Criteria andDescripcionIsNull() {
            addCriterion("descripcion is null");
            return this;
        }

        public Criteria andDescripcionIsNotNull() {
            addCriterion("descripcion is not null");
            return this;
        }

        public Criteria andDescripcionEqualTo(String value) {
            addCriterion("descripcion =", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotEqualTo(String value) {
            addCriterion("descripcion <>", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionGreaterThan(String value) {
            addCriterion("descripcion >", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
            addCriterion("descripcion >=", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLessThan(String value) {
            addCriterion("descripcion <", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLessThanOrEqualTo(String value) {
            addCriterion("descripcion <=", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLike(String value) {
            addCriterion("descripcion like", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotLike(String value) {
            addCriterion("descripcion not like", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionIn(List<String> values) {
            addCriterion("descripcion in", values, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotIn(List<String> values) {
            addCriterion("descripcion not in", values, "descripcion");
            return this;
        }

        public Criteria andDescripcionBetween(String value1, String value2) {
            addCriterion("descripcion between", value1, value2, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotBetween(String value1, String value2) {
            addCriterion("descripcion not between", value1, value2, "descripcion");
            return this;
        }

        public Criteria andTipoIsNull() {
            addCriterion("tipo is null");
            return this;
        }

        public Criteria andTipoIsNotNull() {
            addCriterion("tipo is not null");
            return this;
        }

        public Criteria andTipoEqualTo(Integer value) {
            addCriterion("tipo =", value, "tipo");
            return this;
        }

        public Criteria andTipoNotEqualTo(Integer value) {
            addCriterion("tipo <>", value, "tipo");
            return this;
        }

        public Criteria andTipoGreaterThan(Integer value) {
            addCriterion("tipo >", value, "tipo");
            return this;
        }

        public Criteria andTipoGreaterThanOrEqualTo(Integer value) {
            addCriterion("tipo >=", value, "tipo");
            return this;
        }

        public Criteria andTipoLessThan(Integer value) {
            addCriterion("tipo <", value, "tipo");
            return this;
        }

        public Criteria andTipoLessThanOrEqualTo(Integer value) {
            addCriterion("tipo <=", value, "tipo");
            return this;
        }

        public Criteria andTipoIn(List<Integer> values) {
            addCriterion("tipo in", values, "tipo");
            return this;
        }

        public Criteria andTipoNotIn(List<Integer> values) {
            addCriterion("tipo not in", values, "tipo");
            return this;
        }

        public Criteria andTipoBetween(Integer value1, Integer value2) {
            addCriterion("tipo between", value1, value2, "tipo");
            return this;
        }

        public Criteria andTipoNotBetween(Integer value1, Integer value2) {
            addCriterion("tipo not between", value1, value2, "tipo");
            return this;
        }

        public Criteria andEstadoIsNull() {
            addCriterion("estado is null");
            return this;
        }

        public Criteria andEstadoIsNotNull() {
            addCriterion("estado is not null");
            return this;
        }

        public Criteria andEstadoEqualTo(Integer value) {
            addCriterion("estado =", value, "estado");
            return this;
        }

        public Criteria andEstadoNotEqualTo(Integer value) {
            addCriterion("estado <>", value, "estado");
            return this;
        }

        public Criteria andEstadoGreaterThan(Integer value) {
            addCriterion("estado >", value, "estado");
            return this;
        }

        public Criteria andEstadoGreaterThanOrEqualTo(Integer value) {
            addCriterion("estado >=", value, "estado");
            return this;
        }

        public Criteria andEstadoLessThan(Integer value) {
            addCriterion("estado <", value, "estado");
            return this;
        }

        public Criteria andEstadoLessThanOrEqualTo(Integer value) {
            addCriterion("estado <=", value, "estado");
            return this;
        }

        public Criteria andEstadoIn(List<Integer> values) {
            addCriterion("estado in", values, "estado");
            return this;
        }

        public Criteria andEstadoNotIn(List<Integer> values) {
            addCriterion("estado not in", values, "estado");
            return this;
        }

        public Criteria andEstadoBetween(Integer value1, Integer value2) {
            addCriterion("estado between", value1, value2, "estado");
            return this;
        }

        public Criteria andEstadoNotBetween(Integer value1, Integer value2) {
            addCriterion("estado not between", value1, value2, "estado");
            return this;
        }
    }
}