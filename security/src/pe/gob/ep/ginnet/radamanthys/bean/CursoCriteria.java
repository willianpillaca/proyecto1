package pe.gob.ep.ginnet.radamanthys.bean;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CursoCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    public CursoCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    protected CursoCriteria(CursoCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tbl_curso
     *
     * @ibatorgenerated
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andCodCursoIsNull() {
            addCriterion("cod_curso is null");
            return this;
        }

        public Criteria andCodCursoIsNotNull() {
            addCriterion("cod_curso is not null");
            return this;
        }

        public Criteria andCodCursoEqualTo(String value) {
            addCriterion("cod_curso =", value, "codCurso");
            return this;
        }

        public Criteria andCodCursoNotEqualTo(String value) {
            addCriterion("cod_curso <>", value, "codCurso");
            return this;
        }

        public Criteria andCodCursoGreaterThan(String value) {
            addCriterion("cod_curso >", value, "codCurso");
            return this;
        }

        public Criteria andCodCursoGreaterThanOrEqualTo(String value) {
            addCriterion("cod_curso >=", value, "codCurso");
            return this;
        }

        public Criteria andCodCursoLessThan(String value) {
            addCriterion("cod_curso <", value, "codCurso");
            return this;
        }

        public Criteria andCodCursoLessThanOrEqualTo(String value) {
            addCriterion("cod_curso <=", value, "codCurso");
            return this;
        }

        public Criteria andCodCursoLike(String value) {
            addCriterion("cod_curso like", value, "codCurso");
            return this;
        }

        public Criteria andCodCursoNotLike(String value) {
            addCriterion("cod_curso not like", value, "codCurso");
            return this;
        }

        public Criteria andCodCursoIn(List<String> values) {
            addCriterion("cod_curso in", values, "codCurso");
            return this;
        }

        public Criteria andCodCursoNotIn(List<String> values) {
            addCriterion("cod_curso not in", values, "codCurso");
            return this;
        }

        public Criteria andCodCursoBetween(String value1, String value2) {
            addCriterion("cod_curso between", value1, value2, "codCurso");
            return this;
        }

        public Criteria andCodCursoNotBetween(String value1, String value2) {
            addCriterion("cod_curso not between", value1, value2, "codCurso");
            return this;
        }

        public Criteria andNombreIsNull() {
            addCriterion("nombre is null");
            return this;
        }

        public Criteria andNombreIsNotNull() {
            addCriterion("nombre is not null");
            return this;
        }

        public Criteria andNombreEqualTo(String value) {
            addCriterion("nombre =", value, "nombre");
            return this;
        }

        public Criteria andNombreNotEqualTo(String value) {
            addCriterion("nombre <>", value, "nombre");
            return this;
        }

        public Criteria andNombreGreaterThan(String value) {
            addCriterion("nombre >", value, "nombre");
            return this;
        }

        public Criteria andNombreGreaterThanOrEqualTo(String value) {
            addCriterion("nombre >=", value, "nombre");
            return this;
        }

        public Criteria andNombreLessThan(String value) {
            addCriterion("nombre <", value, "nombre");
            return this;
        }

        public Criteria andNombreLessThanOrEqualTo(String value) {
            addCriterion("nombre <=", value, "nombre");
            return this;
        }

        public Criteria andNombreLike(String value) {
            addCriterion("nombre like", value, "nombre");
            return this;
        }

        public Criteria andNombreNotLike(String value) {
            addCriterion("nombre not like", value, "nombre");
            return this;
        }

        public Criteria andNombreIn(List<String> values) {
            addCriterion("nombre in", values, "nombre");
            return this;
        }

        public Criteria andNombreNotIn(List<String> values) {
            addCriterion("nombre not in", values, "nombre");
            return this;
        }

        public Criteria andNombreBetween(String value1, String value2) {
            addCriterion("nombre between", value1, value2, "nombre");
            return this;
        }

        public Criteria andNombreNotBetween(String value1, String value2) {
            addCriterion("nombre not between", value1, value2, "nombre");
            return this;
        }

        public Criteria andDescripcionIsNull() {
            addCriterion("descripcion is null");
            return this;
        }

        public Criteria andDescripcionIsNotNull() {
            addCriterion("descripcion is not null");
            return this;
        }

        public Criteria andDescripcionEqualTo(String value) {
            addCriterion("descripcion =", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotEqualTo(String value) {
            addCriterion("descripcion <>", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionGreaterThan(String value) {
            addCriterion("descripcion >", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
            addCriterion("descripcion >=", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLessThan(String value) {
            addCriterion("descripcion <", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLessThanOrEqualTo(String value) {
            addCriterion("descripcion <=", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLike(String value) {
            addCriterion("descripcion like", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotLike(String value) {
            addCriterion("descripcion not like", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionIn(List<String> values) {
            addCriterion("descripcion in", values, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotIn(List<String> values) {
            addCriterion("descripcion not in", values, "descripcion");
            return this;
        }

        public Criteria andDescripcionBetween(String value1, String value2) {
            addCriterion("descripcion between", value1, value2, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotBetween(String value1, String value2) {
            addCriterion("descripcion not between", value1, value2, "descripcion");
            return this;
        }

        public Criteria andSylabusIsNull() {
            addCriterion("sylabus is null");
            return this;
        }

        public Criteria andSylabusIsNotNull() {
            addCriterion("sylabus is not null");
            return this;
        }

        public Criteria andSylabusEqualTo(String value) {
            addCriterion("sylabus =", value, "sylabus");
            return this;
        }

        public Criteria andSylabusNotEqualTo(String value) {
            addCriterion("sylabus <>", value, "sylabus");
            return this;
        }

        public Criteria andSylabusGreaterThan(String value) {
            addCriterion("sylabus >", value, "sylabus");
            return this;
        }

        public Criteria andSylabusGreaterThanOrEqualTo(String value) {
            addCriterion("sylabus >=", value, "sylabus");
            return this;
        }

        public Criteria andSylabusLessThan(String value) {
            addCriterion("sylabus <", value, "sylabus");
            return this;
        }

        public Criteria andSylabusLessThanOrEqualTo(String value) {
            addCriterion("sylabus <=", value, "sylabus");
            return this;
        }

        public Criteria andSylabusLike(String value) {
            addCriterion("sylabus like", value, "sylabus");
            return this;
        }

        public Criteria andSylabusNotLike(String value) {
            addCriterion("sylabus not like", value, "sylabus");
            return this;
        }

        public Criteria andSylabusIn(List<String> values) {
            addCriterion("sylabus in", values, "sylabus");
            return this;
        }

        public Criteria andSylabusNotIn(List<String> values) {
            addCriterion("sylabus not in", values, "sylabus");
            return this;
        }

        public Criteria andSylabusBetween(String value1, String value2) {
            addCriterion("sylabus between", value1, value2, "sylabus");
            return this;
        }

        public Criteria andSylabusNotBetween(String value1, String value2) {
            addCriterion("sylabus not between", value1, value2, "sylabus");
            return this;
        }

        public Criteria andTipoEvaluacionIsNull() {
            addCriterion("tipo_evaluacion is null");
            return this;
        }

        public Criteria andTipoEvaluacionIsNotNull() {
            addCriterion("tipo_evaluacion is not null");
            return this;
        }

        public Criteria andTipoEvaluacionEqualTo(Integer value) {
            addCriterion("tipo_evaluacion =", value, "tipoEvaluacion");
            return this;
        }

        public Criteria andTipoEvaluacionNotEqualTo(Integer value) {
            addCriterion("tipo_evaluacion <>", value, "tipoEvaluacion");
            return this;
        }

        public Criteria andTipoEvaluacionGreaterThan(Integer value) {
            addCriterion("tipo_evaluacion >", value, "tipoEvaluacion");
            return this;
        }

        public Criteria andTipoEvaluacionGreaterThanOrEqualTo(Integer value) {
            addCriterion("tipo_evaluacion >=", value, "tipoEvaluacion");
            return this;
        }

        public Criteria andTipoEvaluacionLessThan(Integer value) {
            addCriterion("tipo_evaluacion <", value, "tipoEvaluacion");
            return this;
        }

        public Criteria andTipoEvaluacionLessThanOrEqualTo(Integer value) {
            addCriterion("tipo_evaluacion <=", value, "tipoEvaluacion");
            return this;
        }

        public Criteria andTipoEvaluacionIn(List<Integer> values) {
            addCriterion("tipo_evaluacion in", values, "tipoEvaluacion");
            return this;
        }

        public Criteria andTipoEvaluacionNotIn(List<Integer> values) {
            addCriterion("tipo_evaluacion not in", values, "tipoEvaluacion");
            return this;
        }

        public Criteria andTipoEvaluacionBetween(Integer value1, Integer value2) {
            addCriterion("tipo_evaluacion between", value1, value2, "tipoEvaluacion");
            return this;
        }

        public Criteria andTipoEvaluacionNotBetween(Integer value1, Integer value2) {
            addCriterion("tipo_evaluacion not between", value1, value2, "tipoEvaluacion");
            return this;
        }

        public Criteria andCostoIsNull() {
            addCriterion("costo is null");
            return this;
        }

        public Criteria andCostoIsNotNull() {
            addCriterion("costo is not null");
            return this;
        }

        public Criteria andCostoEqualTo(Long value) {
            addCriterion("costo =", value, "costo");
            return this;
        }

        public Criteria andCostoNotEqualTo(Long value) {
            addCriterion("costo <>", value, "costo");
            return this;
        }

        public Criteria andCostoGreaterThan(Long value) {
            addCriterion("costo >", value, "costo");
            return this;
        }

        public Criteria andCostoGreaterThanOrEqualTo(Long value) {
            addCriterion("costo >=", value, "costo");
            return this;
        }

        public Criteria andCostoLessThan(Long value) {
            addCriterion("costo <", value, "costo");
            return this;
        }

        public Criteria andCostoLessThanOrEqualTo(Long value) {
            addCriterion("costo <=", value, "costo");
            return this;
        }

        public Criteria andCostoIn(List<Long> values) {
            addCriterion("costo in", values, "costo");
            return this;
        }

        public Criteria andCostoNotIn(List<Long> values) {
            addCriterion("costo not in", values, "costo");
            return this;
        }

        public Criteria andCostoBetween(Long value1, Long value2) {
            addCriterion("costo between", value1, value2, "costo");
            return this;
        }

        public Criteria andCostoNotBetween(Long value1, Long value2) {
            addCriterion("costo not between", value1, value2, "costo");
            return this;
        }

        public Criteria andIdProfesorIsNull() {
            addCriterion("id_profesor is null");
            return this;
        }

        public Criteria andIdProfesorIsNotNull() {
            addCriterion("id_profesor is not null");
            return this;
        }

        public Criteria andIdProfesorEqualTo(Integer value) {
            addCriterion("id_profesor =", value, "idProfesor");
            return this;
        }

        public Criteria andIdProfesorNotEqualTo(Integer value) {
            addCriterion("id_profesor <>", value, "idProfesor");
            return this;
        }

        public Criteria andIdProfesorGreaterThan(Integer value) {
            addCriterion("id_profesor >", value, "idProfesor");
            return this;
        }

        public Criteria andIdProfesorGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_profesor >=", value, "idProfesor");
            return this;
        }

        public Criteria andIdProfesorLessThan(Integer value) {
            addCriterion("id_profesor <", value, "idProfesor");
            return this;
        }

        public Criteria andIdProfesorLessThanOrEqualTo(Integer value) {
            addCriterion("id_profesor <=", value, "idProfesor");
            return this;
        }

        public Criteria andIdProfesorIn(List<Integer> values) {
            addCriterion("id_profesor in", values, "idProfesor");
            return this;
        }

        public Criteria andIdProfesorNotIn(List<Integer> values) {
            addCriterion("id_profesor not in", values, "idProfesor");
            return this;
        }

        public Criteria andIdProfesorBetween(Integer value1, Integer value2) {
            addCriterion("id_profesor between", value1, value2, "idProfesor");
            return this;
        }

        public Criteria andIdProfesorNotBetween(Integer value1, Integer value2) {
            addCriterion("id_profesor not between", value1, value2, "idProfesor");
            return this;
        }
    }
}