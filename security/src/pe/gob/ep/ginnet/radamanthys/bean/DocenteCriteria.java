package pe.gob.ep.ginnet.radamanthys.bean;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DocenteCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    public DocenteCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    protected DocenteCriteria(DocenteCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tbl_docente
     *
     * @ibatorgenerated
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdDocenteIsNull() {
            addCriterion("id_docente is null");
            return this;
        }

        public Criteria andIdDocenteIsNotNull() {
            addCriterion("id_docente is not null");
            return this;
        }

        public Criteria andIdDocenteEqualTo(Integer value) {
            addCriterion("id_docente =", value, "idDocente");
            return this;
        }

        public Criteria andIdDocenteNotEqualTo(Integer value) {
            addCriterion("id_docente <>", value, "idDocente");
            return this;
        }

        public Criteria andIdDocenteGreaterThan(Integer value) {
            addCriterion("id_docente >", value, "idDocente");
            return this;
        }

        public Criteria andIdDocenteGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_docente >=", value, "idDocente");
            return this;
        }

        public Criteria andIdDocenteLessThan(Integer value) {
            addCriterion("id_docente <", value, "idDocente");
            return this;
        }

        public Criteria andIdDocenteLessThanOrEqualTo(Integer value) {
            addCriterion("id_docente <=", value, "idDocente");
            return this;
        }

        public Criteria andIdDocenteIn(List<Integer> values) {
            addCriterion("id_docente in", values, "idDocente");
            return this;
        }

        public Criteria andIdDocenteNotIn(List<Integer> values) {
            addCriterion("id_docente not in", values, "idDocente");
            return this;
        }

        public Criteria andIdDocenteBetween(Integer value1, Integer value2) {
            addCriterion("id_docente between", value1, value2, "idDocente");
            return this;
        }

        public Criteria andIdDocenteNotBetween(Integer value1, Integer value2) {
            addCriterion("id_docente not between", value1, value2, "idDocente");
            return this;
        }

        public Criteria andNombreIsNull() {
            addCriterion("nombre is null");
            return this;
        }

        public Criteria andNombreIsNotNull() {
            addCriterion("nombre is not null");
            return this;
        }

        public Criteria andNombreEqualTo(String value) {
            addCriterion("nombre =", value, "nombre");
            return this;
        }

        public Criteria andNombreNotEqualTo(String value) {
            addCriterion("nombre <>", value, "nombre");
            return this;
        }

        public Criteria andNombreGreaterThan(String value) {
            addCriterion("nombre >", value, "nombre");
            return this;
        }

        public Criteria andNombreGreaterThanOrEqualTo(String value) {
            addCriterion("nombre >=", value, "nombre");
            return this;
        }

        public Criteria andNombreLessThan(String value) {
            addCriterion("nombre <", value, "nombre");
            return this;
        }

        public Criteria andNombreLessThanOrEqualTo(String value) {
            addCriterion("nombre <=", value, "nombre");
            return this;
        }

        public Criteria andNombreLike(String value) {
            addCriterion("nombre like", value, "nombre");
            return this;
        }

        public Criteria andNombreNotLike(String value) {
            addCriterion("nombre not like", value, "nombre");
            return this;
        }

        public Criteria andNombreIn(List<String> values) {
            addCriterion("nombre in", values, "nombre");
            return this;
        }

        public Criteria andNombreNotIn(List<String> values) {
            addCriterion("nombre not in", values, "nombre");
            return this;
        }

        public Criteria andNombreBetween(String value1, String value2) {
            addCriterion("nombre between", value1, value2, "nombre");
            return this;
        }

        public Criteria andNombreNotBetween(String value1, String value2) {
            addCriterion("nombre not between", value1, value2, "nombre");
            return this;
        }

        public Criteria andApaternoIsNull() {
            addCriterion("apaterno is null");
            return this;
        }

        public Criteria andApaternoIsNotNull() {
            addCriterion("apaterno is not null");
            return this;
        }

        public Criteria andApaternoEqualTo(String value) {
            addCriterion("apaterno =", value, "apaterno");
            return this;
        }

        public Criteria andApaternoNotEqualTo(String value) {
            addCriterion("apaterno <>", value, "apaterno");
            return this;
        }

        public Criteria andApaternoGreaterThan(String value) {
            addCriterion("apaterno >", value, "apaterno");
            return this;
        }

        public Criteria andApaternoGreaterThanOrEqualTo(String value) {
            addCriterion("apaterno >=", value, "apaterno");
            return this;
        }

        public Criteria andApaternoLessThan(String value) {
            addCriterion("apaterno <", value, "apaterno");
            return this;
        }

        public Criteria andApaternoLessThanOrEqualTo(String value) {
            addCriterion("apaterno <=", value, "apaterno");
            return this;
        }

        public Criteria andApaternoLike(String value) {
            addCriterion("apaterno like", value, "apaterno");
            return this;
        }

        public Criteria andApaternoNotLike(String value) {
            addCriterion("apaterno not like", value, "apaterno");
            return this;
        }

        public Criteria andApaternoIn(List<String> values) {
            addCriterion("apaterno in", values, "apaterno");
            return this;
        }

        public Criteria andApaternoNotIn(List<String> values) {
            addCriterion("apaterno not in", values, "apaterno");
            return this;
        }

        public Criteria andApaternoBetween(String value1, String value2) {
            addCriterion("apaterno between", value1, value2, "apaterno");
            return this;
        }

        public Criteria andApaternoNotBetween(String value1, String value2) {
            addCriterion("apaterno not between", value1, value2, "apaterno");
            return this;
        }

        public Criteria andAmaternoIsNull() {
            addCriterion("amaterno is null");
            return this;
        }

        public Criteria andAmaternoIsNotNull() {
            addCriterion("amaterno is not null");
            return this;
        }

        public Criteria andAmaternoEqualTo(String value) {
            addCriterion("amaterno =", value, "amaterno");
            return this;
        }

        public Criteria andAmaternoNotEqualTo(String value) {
            addCriterion("amaterno <>", value, "amaterno");
            return this;
        }

        public Criteria andAmaternoGreaterThan(String value) {
            addCriterion("amaterno >", value, "amaterno");
            return this;
        }

        public Criteria andAmaternoGreaterThanOrEqualTo(String value) {
            addCriterion("amaterno >=", value, "amaterno");
            return this;
        }

        public Criteria andAmaternoLessThan(String value) {
            addCriterion("amaterno <", value, "amaterno");
            return this;
        }

        public Criteria andAmaternoLessThanOrEqualTo(String value) {
            addCriterion("amaterno <=", value, "amaterno");
            return this;
        }

        public Criteria andAmaternoLike(String value) {
            addCriterion("amaterno like", value, "amaterno");
            return this;
        }

        public Criteria andAmaternoNotLike(String value) {
            addCriterion("amaterno not like", value, "amaterno");
            return this;
        }

        public Criteria andAmaternoIn(List<String> values) {
            addCriterion("amaterno in", values, "amaterno");
            return this;
        }

        public Criteria andAmaternoNotIn(List<String> values) {
            addCriterion("amaterno not in", values, "amaterno");
            return this;
        }

        public Criteria andAmaternoBetween(String value1, String value2) {
            addCriterion("amaterno between", value1, value2, "amaterno");
            return this;
        }

        public Criteria andAmaternoNotBetween(String value1, String value2) {
            addCriterion("amaterno not between", value1, value2, "amaterno");
            return this;
        }

        public Criteria andDniIsNull() {
            addCriterion("dni is null");
            return this;
        }

        public Criteria andDniIsNotNull() {
            addCriterion("dni is not null");
            return this;
        }

        public Criteria andDniEqualTo(String value) {
            addCriterion("dni =", value, "dni");
            return this;
        }

        public Criteria andDniNotEqualTo(String value) {
            addCriterion("dni <>", value, "dni");
            return this;
        }

        public Criteria andDniGreaterThan(String value) {
            addCriterion("dni >", value, "dni");
            return this;
        }

        public Criteria andDniGreaterThanOrEqualTo(String value) {
            addCriterion("dni >=", value, "dni");
            return this;
        }

        public Criteria andDniLessThan(String value) {
            addCriterion("dni <", value, "dni");
            return this;
        }

        public Criteria andDniLessThanOrEqualTo(String value) {
            addCriterion("dni <=", value, "dni");
            return this;
        }

        public Criteria andDniLike(String value) {
            addCriterion("dni like", value, "dni");
            return this;
        }

        public Criteria andDniNotLike(String value) {
            addCriterion("dni not like", value, "dni");
            return this;
        }

        public Criteria andDniIn(List<String> values) {
            addCriterion("dni in", values, "dni");
            return this;
        }

        public Criteria andDniNotIn(List<String> values) {
            addCriterion("dni not in", values, "dni");
            return this;
        }

        public Criteria andDniBetween(String value1, String value2) {
            addCriterion("dni between", value1, value2, "dni");
            return this;
        }

        public Criteria andDniNotBetween(String value1, String value2) {
            addCriterion("dni not between", value1, value2, "dni");
            return this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("email in", values, "email");
            return this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("email not in", values, "email");
            return this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return this;
        }
    }
}