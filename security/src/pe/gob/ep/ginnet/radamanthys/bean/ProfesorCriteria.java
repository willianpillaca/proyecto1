package pe.gob.ep.ginnet.radamanthys.bean;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProfesorCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public ProfesorCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    protected ProfesorCriteria(ProfesorCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andCodPersonaIsNull() {
            addCriterion("cod_persona is null");
            return this;
        }

        public Criteria andCodPersonaIsNotNull() {
            addCriterion("cod_persona is not null");
            return this;
        }

        public Criteria andCodPersonaEqualTo(String value) {
            addCriterion("cod_persona =", value, "codPersona");
            return this;
        }

        public Criteria andCodPersonaNotEqualTo(String value) {
            addCriterion("cod_persona <>", value, "codPersona");
            return this;
        }

        public Criteria andCodPersonaGreaterThan(String value) {
            addCriterion("cod_persona >", value, "codPersona");
            return this;
        }

        public Criteria andCodPersonaGreaterThanOrEqualTo(String value) {
            addCriterion("cod_persona >=", value, "codPersona");
            return this;
        }

        public Criteria andCodPersonaLessThan(String value) {
            addCriterion("cod_persona <", value, "codPersona");
            return this;
        }

        public Criteria andCodPersonaLessThanOrEqualTo(String value) {
            addCriterion("cod_persona <=", value, "codPersona");
            return this;
        }

        public Criteria andCodPersonaLike(String value) {
            addCriterion("cod_persona like", value, "codPersona");
            return this;
        }

        public Criteria andCodPersonaNotLike(String value) {
            addCriterion("cod_persona not like", value, "codPersona");
            return this;
        }

        public Criteria andCodPersonaIn(List<String> values) {
            addCriterion("cod_persona in", values, "codPersona");
            return this;
        }

        public Criteria andCodPersonaNotIn(List<String> values) {
            addCriterion("cod_persona not in", values, "codPersona");
            return this;
        }

        public Criteria andCodPersonaBetween(String value1, String value2) {
            addCriterion("cod_persona between", value1, value2, "codPersona");
            return this;
        }

        public Criteria andCodPersonaNotBetween(String value1, String value2) {
            addCriterion("cod_persona not between", value1, value2, "codPersona");
            return this;
        }

        public Criteria andCodEspecialidadIsNull() {
            addCriterion("cod_especialidad is null");
            return this;
        }

        public Criteria andCodEspecialidadIsNotNull() {
            addCriterion("cod_especialidad is not null");
            return this;
        }

        public Criteria andCodEspecialidadEqualTo(Integer value) {
            addCriterion("cod_especialidad =", value, "codEspecialidad");
            return this;
        }

        public Criteria andCodEspecialidadNotEqualTo(Integer value) {
            addCriterion("cod_especialidad <>", value, "codEspecialidad");
            return this;
        }

        public Criteria andCodEspecialidadGreaterThan(Integer value) {
            addCriterion("cod_especialidad >", value, "codEspecialidad");
            return this;
        }

        public Criteria andCodEspecialidadGreaterThanOrEqualTo(Integer value) {
            addCriterion("cod_especialidad >=", value, "codEspecialidad");
            return this;
        }

        public Criteria andCodEspecialidadLessThan(Integer value) {
            addCriterion("cod_especialidad <", value, "codEspecialidad");
            return this;
        }

        public Criteria andCodEspecialidadLessThanOrEqualTo(Integer value) {
            addCriterion("cod_especialidad <=", value, "codEspecialidad");
            return this;
        }

        public Criteria andCodEspecialidadIn(List<Integer> values) {
            addCriterion("cod_especialidad in", values, "codEspecialidad");
            return this;
        }

        public Criteria andCodEspecialidadNotIn(List<Integer> values) {
            addCriterion("cod_especialidad not in", values, "codEspecialidad");
            return this;
        }

        public Criteria andCodEspecialidadBetween(Integer value1, Integer value2) {
            addCriterion("cod_especialidad between", value1, value2, "codEspecialidad");
            return this;
        }

        public Criteria andCodEspecialidadNotBetween(Integer value1, Integer value2) {
            addCriterion("cod_especialidad not between", value1, value2, "codEspecialidad");
            return this;
        }

        public Criteria andCodInstitucionIsNull() {
            addCriterion("cod_institucion is null");
            return this;
        }

        public Criteria andCodInstitucionIsNotNull() {
            addCriterion("cod_institucion is not null");
            return this;
        }

        public Criteria andCodInstitucionEqualTo(Integer value) {
            addCriterion("cod_institucion =", value, "codInstitucion");
            return this;
        }

        public Criteria andCodInstitucionNotEqualTo(Integer value) {
            addCriterion("cod_institucion <>", value, "codInstitucion");
            return this;
        }

        public Criteria andCodInstitucionGreaterThan(Integer value) {
            addCriterion("cod_institucion >", value, "codInstitucion");
            return this;
        }

        public Criteria andCodInstitucionGreaterThanOrEqualTo(Integer value) {
            addCriterion("cod_institucion >=", value, "codInstitucion");
            return this;
        }

        public Criteria andCodInstitucionLessThan(Integer value) {
            addCriterion("cod_institucion <", value, "codInstitucion");
            return this;
        }

        public Criteria andCodInstitucionLessThanOrEqualTo(Integer value) {
            addCriterion("cod_institucion <=", value, "codInstitucion");
            return this;
        }

        public Criteria andCodInstitucionIn(List<Integer> values) {
            addCriterion("cod_institucion in", values, "codInstitucion");
            return this;
        }

        public Criteria andCodInstitucionNotIn(List<Integer> values) {
            addCriterion("cod_institucion not in", values, "codInstitucion");
            return this;
        }

        public Criteria andCodInstitucionBetween(Integer value1, Integer value2) {
            addCriterion("cod_institucion between", value1, value2, "codInstitucion");
            return this;
        }

        public Criteria andCodInstitucionNotBetween(Integer value1, Integer value2) {
            addCriterion("cod_institucion not between", value1, value2, "codInstitucion");
            return this;
        }

        public Criteria andAnioFinalizoIsNull() {
            addCriterion("anio_finalizo is null");
            return this;
        }

        public Criteria andAnioFinalizoIsNotNull() {
            addCriterion("anio_finalizo is not null");
            return this;
        }

        public Criteria andAnioFinalizoEqualTo(String value) {
            addCriterion("anio_finalizo =", value, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoNotEqualTo(String value) {
            addCriterion("anio_finalizo <>", value, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoGreaterThan(String value) {
            addCriterion("anio_finalizo >", value, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoGreaterThanOrEqualTo(String value) {
            addCriterion("anio_finalizo >=", value, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoLessThan(String value) {
            addCriterion("anio_finalizo <", value, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoLessThanOrEqualTo(String value) {
            addCriterion("anio_finalizo <=", value, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoLike(String value) {
            addCriterion("anio_finalizo like", value, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoNotLike(String value) {
            addCriterion("anio_finalizo not like", value, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoIn(List<String> values) {
            addCriterion("anio_finalizo in", values, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoNotIn(List<String> values) {
            addCriterion("anio_finalizo not in", values, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoBetween(String value1, String value2) {
            addCriterion("anio_finalizo between", value1, value2, "anioFinalizo");
            return this;
        }

        public Criteria andAnioFinalizoNotBetween(String value1, String value2) {
            addCriterion("anio_finalizo not between", value1, value2, "anioFinalizo");
            return this;
        }

        public Criteria andCodGradoAcademicoIsNull() {
            addCriterion("cod_grado_academico is null");
            return this;
        }

        public Criteria andCodGradoAcademicoIsNotNull() {
            addCriterion("cod_grado_academico is not null");
            return this;
        }

        public Criteria andCodGradoAcademicoEqualTo(Integer value) {
            addCriterion("cod_grado_academico =", value, "codGradoAcademico");
            return this;
        }

        public Criteria andCodGradoAcademicoNotEqualTo(Integer value) {
            addCriterion("cod_grado_academico <>", value, "codGradoAcademico");
            return this;
        }

        public Criteria andCodGradoAcademicoGreaterThan(Integer value) {
            addCriterion("cod_grado_academico >", value, "codGradoAcademico");
            return this;
        }

        public Criteria andCodGradoAcademicoGreaterThanOrEqualTo(Integer value) {
            addCriterion("cod_grado_academico >=", value, "codGradoAcademico");
            return this;
        }

        public Criteria andCodGradoAcademicoLessThan(Integer value) {
            addCriterion("cod_grado_academico <", value, "codGradoAcademico");
            return this;
        }

        public Criteria andCodGradoAcademicoLessThanOrEqualTo(Integer value) {
            addCriterion("cod_grado_academico <=", value, "codGradoAcademico");
            return this;
        }

        public Criteria andCodGradoAcademicoIn(List<Integer> values) {
            addCriterion("cod_grado_academico in", values, "codGradoAcademico");
            return this;
        }

        public Criteria andCodGradoAcademicoNotIn(List<Integer> values) {
            addCriterion("cod_grado_academico not in", values, "codGradoAcademico");
            return this;
        }

        public Criteria andCodGradoAcademicoBetween(Integer value1, Integer value2) {
            addCriterion("cod_grado_academico between", value1, value2, "codGradoAcademico");
            return this;
        }

        public Criteria andCodGradoAcademicoNotBetween(Integer value1, Integer value2) {
            addCriterion("cod_grado_academico not between", value1, value2, "codGradoAcademico");
            return this;
        }

        public Criteria andCodNacionalidadIsNull() {
            addCriterion("cod_nacionalidad is null");
            return this;
        }

        public Criteria andCodNacionalidadIsNotNull() {
            addCriterion("cod_nacionalidad is not null");
            return this;
        }

        public Criteria andCodNacionalidadEqualTo(Integer value) {
            addCriterion("cod_nacionalidad =", value, "codNacionalidad");
            return this;
        }

        public Criteria andCodNacionalidadNotEqualTo(Integer value) {
            addCriterion("cod_nacionalidad <>", value, "codNacionalidad");
            return this;
        }

        public Criteria andCodNacionalidadGreaterThan(Integer value) {
            addCriterion("cod_nacionalidad >", value, "codNacionalidad");
            return this;
        }

        public Criteria andCodNacionalidadGreaterThanOrEqualTo(Integer value) {
            addCriterion("cod_nacionalidad >=", value, "codNacionalidad");
            return this;
        }

        public Criteria andCodNacionalidadLessThan(Integer value) {
            addCriterion("cod_nacionalidad <", value, "codNacionalidad");
            return this;
        }

        public Criteria andCodNacionalidadLessThanOrEqualTo(Integer value) {
            addCriterion("cod_nacionalidad <=", value, "codNacionalidad");
            return this;
        }

        public Criteria andCodNacionalidadIn(List<Integer> values) {
            addCriterion("cod_nacionalidad in", values, "codNacionalidad");
            return this;
        }

        public Criteria andCodNacionalidadNotIn(List<Integer> values) {
            addCriterion("cod_nacionalidad not in", values, "codNacionalidad");
            return this;
        }

        public Criteria andCodNacionalidadBetween(Integer value1, Integer value2) {
            addCriterion("cod_nacionalidad between", value1, value2, "codNacionalidad");
            return this;
        }

        public Criteria andCodNacionalidadNotBetween(Integer value1, Integer value2) {
            addCriterion("cod_nacionalidad not between", value1, value2, "codNacionalidad");
            return this;
        }
    }
}