package pe.gob.ep.ginnet.radamanthys.bean;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ExamenCriteria {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public ExamenCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    protected ExamenCriteria(ExamenCriteria example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andDescripcionIsNull() {
            addCriterion("descripcion is null");
            return this;
        }

        public Criteria andDescripcionIsNotNull() {
            addCriterion("descripcion is not null");
            return this;
        }

        public Criteria andDescripcionEqualTo(String value) {
            addCriterion("descripcion =", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotEqualTo(String value) {
            addCriterion("descripcion <>", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionGreaterThan(String value) {
            addCriterion("descripcion >", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
            addCriterion("descripcion >=", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLessThan(String value) {
            addCriterion("descripcion <", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLessThanOrEqualTo(String value) {
            addCriterion("descripcion <=", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionLike(String value) {
            addCriterion("descripcion like", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotLike(String value) {
            addCriterion("descripcion not like", value, "descripcion");
            return this;
        }

        public Criteria andDescripcionIn(List<String> values) {
            addCriterion("descripcion in", values, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotIn(List<String> values) {
            addCriterion("descripcion not in", values, "descripcion");
            return this;
        }

        public Criteria andDescripcionBetween(String value1, String value2) {
            addCriterion("descripcion between", value1, value2, "descripcion");
            return this;
        }

        public Criteria andDescripcionNotBetween(String value1, String value2) {
            addCriterion("descripcion not between", value1, value2, "descripcion");
            return this;
        }

        public Criteria andIdCursoIsNull() {
            addCriterion("id_curso is null");
            return this;
        }

        public Criteria andIdCursoIsNotNull() {
            addCriterion("id_curso is not null");
            return this;
        }

        public Criteria andIdCursoEqualTo(Integer value) {
            addCriterion("id_curso =", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoNotEqualTo(Integer value) {
            addCriterion("id_curso <>", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoGreaterThan(Integer value) {
            addCriterion("id_curso >", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_curso >=", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoLessThan(Integer value) {
            addCriterion("id_curso <", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoLessThanOrEqualTo(Integer value) {
            addCriterion("id_curso <=", value, "idCurso");
            return this;
        }

        public Criteria andIdCursoIn(List<Integer> values) {
            addCriterion("id_curso in", values, "idCurso");
            return this;
        }

        public Criteria andIdCursoNotIn(List<Integer> values) {
            addCriterion("id_curso not in", values, "idCurso");
            return this;
        }

        public Criteria andIdCursoBetween(Integer value1, Integer value2) {
            addCriterion("id_curso between", value1, value2, "idCurso");
            return this;
        }

        public Criteria andIdCursoNotBetween(Integer value1, Integer value2) {
            addCriterion("id_curso not between", value1, value2, "idCurso");
            return this;
        }

        public Criteria andIdSistemaIsNull() {
            addCriterion("id_sistema is null");
            return this;
        }

        public Criteria andIdSistemaIsNotNull() {
            addCriterion("id_sistema is not null");
            return this;
        }

        public Criteria andIdSistemaEqualTo(Integer value) {
            addCriterion("id_sistema =", value, "idSistema");
            return this;
        }

        public Criteria andIdSistemaNotEqualTo(Integer value) {
            addCriterion("id_sistema <>", value, "idSistema");
            return this;
        }

        public Criteria andIdSistemaGreaterThan(Integer value) {
            addCriterion("id_sistema >", value, "idSistema");
            return this;
        }

        public Criteria andIdSistemaGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_sistema >=", value, "idSistema");
            return this;
        }

        public Criteria andIdSistemaLessThan(Integer value) {
            addCriterion("id_sistema <", value, "idSistema");
            return this;
        }

        public Criteria andIdSistemaLessThanOrEqualTo(Integer value) {
            addCriterion("id_sistema <=", value, "idSistema");
            return this;
        }

        public Criteria andIdSistemaIn(List<Integer> values) {
            addCriterion("id_sistema in", values, "idSistema");
            return this;
        }

        public Criteria andIdSistemaNotIn(List<Integer> values) {
            addCriterion("id_sistema not in", values, "idSistema");
            return this;
        }

        public Criteria andIdSistemaBetween(Integer value1, Integer value2) {
            addCriterion("id_sistema between", value1, value2, "idSistema");
            return this;
        }

        public Criteria andIdSistemaNotBetween(Integer value1, Integer value2) {
            addCriterion("id_sistema not between", value1, value2, "idSistema");
            return this;
        }

        public Criteria andIdEstadoIsNull() {
            addCriterion("id_estado is null");
            return this;
        }

        public Criteria andIdEstadoIsNotNull() {
            addCriterion("id_estado is not null");
            return this;
        }

        public Criteria andIdEstadoEqualTo(Integer value) {
            addCriterion("id_estado =", value, "idEstado");
            return this;
        }

        public Criteria andIdEstadoNotEqualTo(Integer value) {
            addCriterion("id_estado <>", value, "idEstado");
            return this;
        }

        public Criteria andIdEstadoGreaterThan(Integer value) {
            addCriterion("id_estado >", value, "idEstado");
            return this;
        }

        public Criteria andIdEstadoGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_estado >=", value, "idEstado");
            return this;
        }

        public Criteria andIdEstadoLessThan(Integer value) {
            addCriterion("id_estado <", value, "idEstado");
            return this;
        }

        public Criteria andIdEstadoLessThanOrEqualTo(Integer value) {
            addCriterion("id_estado <=", value, "idEstado");
            return this;
        }

        public Criteria andIdEstadoIn(List<Integer> values) {
            addCriterion("id_estado in", values, "idEstado");
            return this;
        }

        public Criteria andIdEstadoNotIn(List<Integer> values) {
            addCriterion("id_estado not in", values, "idEstado");
            return this;
        }

        public Criteria andIdEstadoBetween(Integer value1, Integer value2) {
            addCriterion("id_estado between", value1, value2, "idEstado");
            return this;
        }

        public Criteria andIdEstadoNotBetween(Integer value1, Integer value2) {
            addCriterion("id_estado not between", value1, value2, "idEstado");
            return this;
        }
    }
}