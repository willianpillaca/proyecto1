package pe.gob.ep.ginnet.radamanthys.dao.ibatis;

import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import pe.gob.ep.ginnet.radamanthys.bean.Profesor;
import pe.gob.ep.ginnet.radamanthys.bean.ProfesorCriteria;
import pe.gob.ep.ginnet.radamanthys.dao.ProfesorDAO;

public class ProfesorDAOImpl extends SqlMapClientDaoSupport implements ProfesorDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public ProfesorDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public int countByExample(ProfesorCriteria example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("tbl_profesor.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public int deleteByExample(ProfesorCriteria example) {
        int rows = getSqlMapClientTemplate().delete("tbl_profesor.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public int deleteByPrimaryKey(Integer id) {
        Profesor key = new Profesor();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("tbl_profesor.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public void insert(Profesor record) {
        getSqlMapClientTemplate().insert("tbl_profesor.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public void insertSelective(Profesor record) {
        getSqlMapClientTemplate().insert("tbl_profesor.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    @SuppressWarnings("unchecked")
    public List<Profesor> selectByExample(ProfesorCriteria example) {
        List<Profesor> list = getSqlMapClientTemplate().queryForList("tbl_profesor.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public Profesor selectByPrimaryKey(Integer id) {
        Profesor key = new Profesor();
        key.setId(id);
        Profesor record = (Profesor) getSqlMapClientTemplate().queryForObject("tbl_profesor.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public int updateByExampleSelective(Profesor record, ProfesorCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("tbl_profesor.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public int updateByExample(Profesor record, ProfesorCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("tbl_profesor.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public int updateByPrimaryKeySelective(Profesor record) {
        int rows = getSqlMapClientTemplate().update("tbl_profesor.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    public int updateByPrimaryKey(Profesor record) {
        int rows = getSqlMapClientTemplate().update("tbl_profesor.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tbl_profesor
     *
     * @ibatorgenerated
     */
    private static class UpdateByExampleParms extends ProfesorCriteria {
        private Object record;

        public UpdateByExampleParms(Object record, ProfesorCriteria example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}