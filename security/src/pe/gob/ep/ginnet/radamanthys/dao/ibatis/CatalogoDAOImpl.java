package pe.gob.ep.ginnet.radamanthys.dao.ibatis;

import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import pe.gob.ep.ginnet.radamanthys.bean.Catalogo;
import pe.gob.ep.ginnet.radamanthys.bean.CatalogoCriteria;
import pe.gob.ep.ginnet.radamanthys.dao.CatalogoDAO;

public class CatalogoDAOImpl extends SqlMapClientDaoSupport implements CatalogoDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ctrl_conf_catalogo
     *
     * @ibatorgenerated
     */
    public CatalogoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ctrl_conf_catalogo
     *
     * @ibatorgenerated
     */
    public int countByExample(CatalogoCriteria example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("ctrl_conf_catalogo.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ctrl_conf_catalogo
     *
     * @ibatorgenerated
     */
    public int deleteByExample(CatalogoCriteria example) {
        int rows = getSqlMapClientTemplate().delete("ctrl_conf_catalogo.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ctrl_conf_catalogo
     *
     * @ibatorgenerated
     */
    public void insert(Catalogo record) {
        getSqlMapClientTemplate().insert("ctrl_conf_catalogo.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ctrl_conf_catalogo
     *
     * @ibatorgenerated
     */
    public void insertSelective(Catalogo record) {
        getSqlMapClientTemplate().insert("ctrl_conf_catalogo.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ctrl_conf_catalogo
     *
     * @ibatorgenerated
     */
    @SuppressWarnings("unchecked")
    public List<Catalogo> selectByExample(CatalogoCriteria example) {
        List<Catalogo> list = getSqlMapClientTemplate().queryForList("ctrl_conf_catalogo.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ctrl_conf_catalogo
     *
     * @ibatorgenerated
     */
    public int updateByExampleSelective(Catalogo record, CatalogoCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("ctrl_conf_catalogo.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table ctrl_conf_catalogo
     *
     * @ibatorgenerated
     */
    public int updateByExample(Catalogo record, CatalogoCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("ctrl_conf_catalogo.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table ctrl_conf_catalogo
     *
     * @ibatorgenerated
     */
    private static class UpdateByExampleParms extends CatalogoCriteria {
        private Object record;

        public UpdateByExampleParms(Object record, CatalogoCriteria example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}