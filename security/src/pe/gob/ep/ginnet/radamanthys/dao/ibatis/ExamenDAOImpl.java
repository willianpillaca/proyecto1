package pe.gob.ep.ginnet.radamanthys.dao.ibatis;

import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import pe.gob.ep.ginnet.radamanthys.bean.Examen;
import pe.gob.ep.ginnet.radamanthys.bean.ExamenCriteria;
import pe.gob.ep.ginnet.radamanthys.dao.ExamenDAO;

public class ExamenDAOImpl extends SqlMapClientDaoSupport implements ExamenDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public ExamenDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public int countByExample(ExamenCriteria example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("tbl_examen.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public int deleteByExample(ExamenCriteria example) {
        int rows = getSqlMapClientTemplate().delete("tbl_examen.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public int deleteByPrimaryKey(Integer id) {
        Examen key = new Examen();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("tbl_examen.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public void insert(Examen record) {
        getSqlMapClientTemplate().insert("tbl_examen.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public void insertSelective(Examen record) {
        getSqlMapClientTemplate().insert("tbl_examen.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    @SuppressWarnings("unchecked")
    public List<Examen> selectByExample(ExamenCriteria example) {
        List<Examen> list = getSqlMapClientTemplate().queryForList("tbl_examen.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public Examen selectByPrimaryKey(Integer id) {
        Examen key = new Examen();
        key.setId(id);
        Examen record = (Examen) getSqlMapClientTemplate().queryForObject("tbl_examen.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public int updateByExampleSelective(Examen record, ExamenCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("tbl_examen.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public int updateByExample(Examen record, ExamenCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("tbl_examen.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public int updateByPrimaryKeySelective(Examen record) {
        int rows = getSqlMapClientTemplate().update("tbl_examen.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    public int updateByPrimaryKey(Examen record) {
        int rows = getSqlMapClientTemplate().update("tbl_examen.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tbl_examen
     *
     * @ibatorgenerated
     */
    private static class UpdateByExampleParms extends ExamenCriteria {
        private Object record;

        public UpdateByExampleParms(Object record, ExamenCriteria example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
    
    @Override
	public List<Examen> listarPreguntasExamen(Map<String, Object> params) {
		// TODO Auto-generated method stub
		List<Examen> list = getSqlMapClientTemplate().queryForList("tbl_examen.listarPreguntasExamen", params);
		return list;
	}

	@Override
	public List<Examen> obtenerIdPregunta(Map<String, Object> params) {
		// TODO Auto-generated method stub		
		List<Examen> list = getSqlMapClientTemplate().queryForList("tbl_examen.obtenerUltimoIdpregunta", params);			
		return list;
	}
}