package pe.gob.ep.ginnet.radamanthys.dao.ibatis;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import pe.gob.ep.ginnet.radamanthys.bean.Alternativa;
import pe.gob.ep.ginnet.radamanthys.bean.AlternativaCriteria;
import pe.gob.ep.ginnet.radamanthys.dao.AlternativaDAO;

public class AlternativaDAOImpl extends SqlMapClientDaoSupport implements AlternativaDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public AlternativaDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public int countByExample(AlternativaCriteria example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("tbl_alternativa.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public int deleteByExample(AlternativaCriteria example) {
        int rows = getSqlMapClientTemplate().delete("tbl_alternativa.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public int deleteByPrimaryKey(Integer id) {
        Alternativa key = new Alternativa();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("tbl_alternativa.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public void insert(Alternativa record) {
        getSqlMapClientTemplate().insert("tbl_alternativa.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public void insertSelective(Alternativa record) {
        getSqlMapClientTemplate().insert("tbl_alternativa.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    @SuppressWarnings("unchecked")
    public List<Alternativa> selectByExample(AlternativaCriteria example) {
        List<Alternativa> list = getSqlMapClientTemplate().queryForList("tbl_alternativa.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public Alternativa selectByPrimaryKey(Integer id) {
        Alternativa key = new Alternativa();
        key.setId(id);
        Alternativa record = (Alternativa) getSqlMapClientTemplate().queryForObject("tbl_alternativa.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public int updateByExampleSelective(Alternativa record, AlternativaCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("tbl_alternativa.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public int updateByExample(Alternativa record, AlternativaCriteria example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("tbl_alternativa.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public int updateByPrimaryKeySelective(Alternativa record) {
        int rows = getSqlMapClientTemplate().update("tbl_alternativa.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    public int updateByPrimaryKey(Alternativa record) {
        int rows = getSqlMapClientTemplate().update("tbl_alternativa.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table tbl_alternativa
     *
     * @ibatorgenerated
     */
    private static class UpdateByExampleParms extends AlternativaCriteria {
        private Object record;

        public UpdateByExampleParms(Object record, AlternativaCriteria example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
    
    
    @Override
	public List<Alternativa> listarAlternativasExamen(Map<String, Object> params) throws Exception {
		// TODO Auto-generated method stub
		List<Alternativa> list = getSqlMapClientTemplate().queryForList("tbl_alternativa.listarAlternativasByPregunta", params);
		return list;
	}

	@Override
	public int validarRespuesta(String param) {
		// TODO Auto-generated method stub
		Map<String, Object> params=new HashMap<String, Object>();
		params.put("valor", param);	
		Integer rows = (Integer) getSqlMapClientTemplate().queryForObject("tbl_alternativa.obtenerRespuesta", params);
		System.out.println("rows->>>"+rows);
        return rows;
		
	}

	@Override
	public void insertarAlternativas1(Map<String, Object> params) {
		// TODO Auto-generated method stub
		getSqlMapClientTemplate().insert("tbl_alternativa.insertarAlternativa1", params);
	}
	
	@Override
	public void insertarAlternativas2(Map<String, Object> params) {
		// TODO Auto-generated method stub
		getSqlMapClientTemplate().insert("tbl_alternativa.insertarAlternativa2", params);
	}
	@Override
	public void insertarAlternativas3(Map<String, Object> params) {
		// TODO Auto-generated method stub
		getSqlMapClientTemplate().insert("tbl_alternativa.insertarAlternativa3", params);
	}
	@Override
	public void insertarAlternativas4(Map<String, Object> params) {
		// TODO Auto-generated method stub
		getSqlMapClientTemplate().insert("tbl_alternativa.insertarAlternativa4", params);
	}
	@Override
	public void insertarAlternativas5(Map<String, Object> params) {
		// TODO Auto-generated method stub
		getSqlMapClientTemplate().insert("tbl_alternativa.insertarAlternativa5", params);
	}    
}